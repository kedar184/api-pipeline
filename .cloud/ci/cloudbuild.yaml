steps:
  # Install dependencies and run tests
  - name: 'python:3.9'
    entrypoint: pip
    args: ['install', '-r', 'requirements.txt', '-r', 'requirements-dev.txt']
    
  - name: 'python:3.9'
    entrypoint: python
    args: ['-m', 'pytest', '--junitxml=test-reports/junit.xml']
    env:
      - 'PYTHONPATH=/workspace/src'

  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY}/${_SERVICE_NAME}:${SHORT_SHA}',
      '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY}/${_SERVICE_NAME}:latest',
      '.'
    ]

  # Push the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY}/${_SERVICE_NAME}:${SHORT_SHA}']
  
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY}/${_SERVICE_NAME}:latest']

  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY}/${_SERVICE_NAME}:${SHORT_SHA}'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '10'
      - '--port'
      - '8080'
      - '--set-env-vars'
      - 'CONFIG_BUCKET=${_CONFIG_BUCKET}'
      - '--set-secrets'
      - 'GOOGLE_CLOUD_PROJECT=project-id:latest'
      - '--service-account'
      - '${_SERVICE_ACCOUNT}'
      - '--timeout'
      - '3600'

substitutions:
  _REGION: us-central1
  _SERVICE_NAME: api-pipeline
  _ARTIFACT_REGISTRY: api-pipeline
  _CONFIG_BUCKET: ${PROJECT_ID}-pipeline-config
  _SERVICE_ACCOUNT: api-pipeline@${PROJECT_ID}.iam.gserviceaccount.com

options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY

artifacts:
  reports:
    junit_reports:
      - 'test-reports/junit.xml' 