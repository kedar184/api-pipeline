steps:
  # Install dependencies and run tests
  - name: 'python:3.9'
    entrypoint: pip
    args: ['install', '-r', 'requirements.txt', '-r', 'requirements-dev.txt']
    
  - name: 'python:3.9'
    entrypoint: python
    args: ['-m', 'pytest', '--junitxml=test-reports/junit.xml']
    env:
      - 'PYTHONPATH=/workspace/src'
      - 'ENVIRONMENT=prod'

  # Security scanning
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'container'
      - 'scan'
      - '--format=json'
      - '--scan-type=vulnerability'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY}/${_SERVICE_NAME}:${SHORT_SHA}'
    id: 'vulnerability-scan'

  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY}/${_SERVICE_NAME}:${SHORT_SHA}',
      '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY}/${_SERVICE_NAME}:prod',
      '--build-arg', 'ENVIRONMENT=prod',
      '.'
    ]

  # Push the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY}/${_SERVICE_NAME}:${SHORT_SHA}']
  
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY}/${_SERVICE_NAME}:prod']

  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY}/${_SERVICE_NAME}:${SHORT_SHA}'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--no-allow-unauthenticated'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--min-instances'
      - '1'
      - '--max-instances'
      - '10'
      - '--port'
      - '8080'
      - '--set-env-vars'
      - |
        ENVIRONMENT=prod,
        CONFIG_BUCKET=${_CONFIG_BUCKET},
        LOG_LEVEL=INFO
      - '--set-secrets'
      - 'GOOGLE_CLOUD_PROJECT=project-id:latest'
      - '--service-account'
      - '${_SERVICE_ACCOUNT}'
      - '--timeout'
      - '3600'
      - '--ingress'
      - 'internal'
      - '--vpc-connector'
      - '${_VPC_CONNECTOR}'

  # Verify deployment
  - name: 'gcr.io/cloud-builders/curl'
    args:
      - '-s'
      - '-o'
      - '/dev/null'
      - '-w'
      - '%{http_code}'
      - '-H'
      - 'Authorization: Bearer $(gcloud auth print-identity-token)'
      - '${_SERVICE_URL}/health'
    id: 'health-check'

substitutions:
  _REGION: us-central1
  _SERVICE_NAME: api-pipeline
  _ARTIFACT_REGISTRY: api-pipeline-prod
  _CONFIG_BUCKET: ${PROJECT_ID}-pipeline-config-prod
  _SERVICE_ACCOUNT: api-pipeline@${PROJECT_ID}.iam.gserviceaccount.com
  _VPC_CONNECTOR: api-pipeline-vpc-connector
  _SERVICE_URL: https://${_SERVICE_NAME}-${_REGION}-r.a.run.app

options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY

artifacts:
  reports:
    junit_reports:
      - 'test-reports/junit.xml'
    vulnerability_reports:
      - 'vulnerability-scan.json' 